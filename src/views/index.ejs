<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #f5576c);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow-x: hidden;
        }

        @keyframes gradientShift {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            padding: 3rem;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            text-align: center;
            max-width: 800px;
            margin: 20px;
            animation: fadeInUp 1s ease-out;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .hero-section {
            margin-bottom: 3rem;
        }

        .logo {
            font-size: 4rem;
            margin-bottom: 1rem;
            animation: float 3s ease-in-out infinite;
        }

        h1 {
            color: #2c3e50;
            margin-bottom: 1rem;
            font-size: 3rem;
            font-weight: 700;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            text-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .subtitle {
            color: #7f8c8d;
            font-size: 1.2rem;
            margin-bottom: 2rem;
            line-height: 1.6;
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }

        .feature-card {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            padding: 1.5rem;
            border-radius: 15px;
            transition: all 0.3s ease;
            border: 1px solid rgba(0,0,0,0.05);
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
            background: linear-gradient(135deg, #ffffff, #f8f9fa);
        }

        .feature-icon {
            font-size: 2.5rem;
            color: #667eea;
            margin-bottom: 1rem;
        }

        .feature-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .feature-desc {
            font-size: 0.9rem;
            color: #7f8c8d;
            line-height: 1.4;
        }

        .api-section {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            padding: 2rem;
            border-radius: 15px;
            margin: 2rem 0;
            border-left: 5px solid #667eea;
        }

        .api-title {
            color: #2c3e50;
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .endpoints-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1rem;
        }

        .endpoint {
            font-family: 'Fira Code', 'Courier New', monospace;
            background: #2c3e50;
            color: #ecf0f1;
            padding: 1rem;
            border-radius: 8px;
            font-size: 0.85rem;
            text-align: left;
            transition: all 0.3s ease;
            border: 1px solid #34495e;
            line-height: 1.4;
        }

        .endpoint:hover {
            background: #34495e;
            transform: scale(1.02);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        .data-model {
            background: linear-gradient(135deg, #e8f5e8, #f0f8f0);
            padding: 2rem;
            border-radius: 15px;
            margin: 2rem 0;
            border-left: 5px solid #27ae60;
        }

        .model-title {
            color: #2c3e50;
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .model-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .model-card {
            background: white;
            padding: 1.5rem;
            border-radius: 10px;
            border: 1px solid #e0e0e0;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .model-card h4 {
            color: #27ae60;
            margin-bottom: 1rem;
            font-size: 1.2rem;
        }

        .model-field {
            margin-bottom: 0.8rem;
            font-family: 'Fira Code', monospace;
            font-size: 0.9rem;
        }

        .field-name {
            color: #e74c3c;
            font-weight: bold;
        }

        .field-type {
            color: #3498db;
        }

        .field-required {
            color: #f39c12;
            font-weight: bold;
        }

        .response-format {
            background: linear-gradient(135deg, #fff3e0, #ffeaa7);
            padding: 2rem;
            border-radius: 15px;
            margin: 2rem 0;
            border-left: 5px solid #f39c12;
        }

        .code-block {
            background: #2c3e50;
            color: #ecf0f1;
            padding: 1rem;
            border-radius: 8px;
            font-family: 'Fira Code', monospace;
            font-size: 0.85rem;
            overflow-x: auto;
            margin: 1rem 0;
        }

        .method {
            color: #e74c3c;
            font-weight: bold;
        }

        .method.get { color: #27ae60; }
        .method.post { color: #f39c12; }
        .method.put { color: #3498db; }
        .method.delete { color: #e74c3c; }

        .server-info {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 1.5rem;
            border-radius: 15px;
            margin: 2rem 0;
            font-size: 1.1rem;
            font-weight: 500;
        }

        .server-info i {
            margin-right: 0.5rem;
        }

        .nav-buttons {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-top: 2rem;
        }

        .btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 1rem 1.5rem;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            text-decoration: none;
            border-radius: 12px;
            font-weight: 600;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 1rem;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
            background: linear-gradient(135deg, #5a6fd8, #6a5acd);
        }

        .btn.primary {
            background: linear-gradient(135deg, #e74c3c, #c0392b);
        }

        .btn.primary:hover {
            background: linear-gradient(135deg, #c0392b, #a93226);
            box-shadow: 0 10px 25px rgba(231, 76, 60, 0.4);
        }

        .btn.secondary {
            background: linear-gradient(135deg, #95a5a6, #7f8c8d);
        }

        .btn.secondary:hover {
            background: linear-gradient(135deg, #7f8c8d, #6c7b7d);
            box-shadow: 0 10px 25px rgba(149, 165, 166, 0.4);
        }

        .floating-shapes {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .shape {
            position: absolute;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }

        .shape:nth-child(1) {
            width: 80px;
            height: 80px;
            top: 20%;
            left: 10%;
            animation-delay: 0s;
        }

        .shape:nth-child(2) {
            width: 120px;
            height: 120px;
            top: 60%;
            right: 10%;
            animation-delay: 2s;
        }

        .shape:nth-child(3) {
            width: 60px;
            height: 60px;
            bottom: 20%;
            left: 20%;
            animation-delay: 4s;
        }

        @media (max-width: 768px) {
            .container {
                padding: 2rem;
                margin: 10px;
            }

            h1 {
                font-size: 2.5rem;
            }

            .logo {
                font-size: 3rem;
            }

            .features-grid {
                grid-template-columns: 1fr;
            }

            .endpoints-grid {
                grid-template-columns: 1fr;
            }

            .nav-buttons {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="floating-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>
    
    <div class="container">
        <div class="hero-section">
            <div class="logo">📸</div>
            <h1>写真馆 API</h1>
            <p class="subtitle">现代化的照片管理 RESTful API 服务，提供完整的照片存储、检索和管理功能</p>
        </div>



        <div class="server-info">
            <i class="fas fa-server"></i>
            <strong>服务器运行在:</strong><a href="https://photos.茶馆.club">https://photos.茶馆.club</a>
        </div>

        <div class="nav-buttons">
            <a href="/list" class="btn primary">
                <i class="fas fa-th-large"></i>
                照片列表
            </a>
            <a href="/random" class="btn primary">
                <i class="fas fa-shuffle"></i>
                随机图片
            </a>
            <a href="/api/photos" class="btn secondary">
                <i class="fas fa-database"></i>
                API 数据
            </a>
            <a href="/api/photos/random" class="btn secondary">
                <i class="fas fa-dice"></i>
                随机 API
            </a>
            <a href="/admin/dashboard.html" class="btn secondary">
                <i class="fas fa-dice"></i>
                后台管理
            </a>
        </div>
        
        <div class="api-section">
            <h3 class="api-title">
                <i class="fas fa-rocket"></i>
                照片管理 API 端点
            </h3>
            <div class="endpoints-grid">
                <div class="endpoint">
                    <span class="method get">GET</span> /api/photos<br>
                    <small>获取所有照片（支持分页）</small><br>
                    <strong>查询参数:</strong> page, limit, search<br>
                    <strong>返回:</strong> 照片列表 + 分页信息
                </div>
                <div class="endpoint">
                    <span class="method get">GET</span> /api/photos/random<br>
                    <small>随机获取一张照片</small><br>
                    <strong>返回:</strong> 单个照片对象
                </div>
                <div class="endpoint">
                    <span class="method get">GET</span> /api/photos/:id<br>
                    <small>根据ID获取特定照片</small><br>
                    <strong>路径参数:</strong> id (照片ID)<br>
                    <strong>返回:</strong> 单个照片对象
                </div>
                <div class="endpoint">
                    <span class="method post">POST</span> /api/photos<br>
                    <small>创建新的照片记录</small><br>
                    <strong>请求体:</strong> url*, title, description, tags<br>
                    <strong>返回:</strong> 创建的照片对象
                </div>
                <div class="endpoint">
                    <span class="method put">PUT</span> /api/photos/:id<br>
                    <small>更新现有照片信息</small><br>
                    <strong>路径参数:</strong> id (照片ID)<br>
                    <strong>请求体:</strong> url, title, description, tags<br>
                    <strong>返回:</strong> 更新后的照片对象
                </div>
                <div class="endpoint">
                    <span class="method delete">DELETE</span> /api/photos/:id<br>
                    <small>删除指定照片</small><br>
                    <strong>路径参数:</strong> id (照片ID)<br>
                    <strong>返回:</strong> 删除成功消息
                </div>
            </div>
        </div>

        <div class="api-section">
            <h3 class="api-title">
                <i class="fas fa-users"></i>
                用户管理 API 端点
            </h3>
            <div class="endpoints-grid">
                <div class="endpoint">
                    <span class="method post">POST</span> /api/users/register<br>
                    <small>用户注册</small><br>
                    <strong>请求体:</strong> username*, password*, role<br>
                    <strong>返回:</strong> 用户信息 + JWT token
                </div>
                <div class="endpoint">
                    <span class="method post">POST</span> /api/users/login<br>
                    <small>用户登录</small><br>
                    <strong>请求体:</strong> username*, password*<br>
                    <strong>返回:</strong> 用户信息 + JWT token
                </div>
                <div class="endpoint">
                    <span class="method post">POST</span> /api/users/verify<br>
                    <small>验证JWT token</small><br>
                    <strong>请求头:</strong> Authorization: Bearer {token}<br>
                    <strong>返回:</strong> 用户信息
                </div>
                <div class="endpoint">
                    <span class="method get">GET</span> /api/users/profile<br>
                    <small>获取当前用户信息</small><br>
                    <strong>请求头:</strong> Authorization: Bearer {token}<br>
                    <strong>返回:</strong> 当前用户信息
                </div>
                <div class="endpoint">
                    <span class="method get">GET</span> /api/users<br>
                    <small>获取所有用户（管理员）</small><br>
                    <strong>请求头:</strong> Authorization: Bearer {token}<br>
                    <strong>查询参数:</strong> page, limit<br>
                    <strong>返回:</strong> 用户列表 + 分页信息
                </div>
                <div class="endpoint">
                    <span class="method put">PUT</span> /api/users/:id<br>
                    <small>更新用户信息</small><br>
                    <strong>请求头:</strong> Authorization: Bearer {token}<br>
                    <strong>路径参数:</strong> id (用户ID)<br>
                    <strong>请求体:</strong> username, password, role, isActive<br>
                    <strong>返回:</strong> 更新后的用户信息
                </div>
                <div class="endpoint">
                    <span class="method delete">DELETE</span> /api/users/:id<br>
                    <small>删除用户（管理员）</small><br>
                    <strong>请求头:</strong> Authorization: Bearer {token}<br>
                    <strong>路径参数:</strong> id (用户ID)<br>
                    <strong>返回:</strong> 删除成功消息
                </div>
            </div>
        </div>

        <div class="data-model">
            <h3 class="model-title">
                <i class="fas fa-database"></i>
                数据模型
            </h3>
            <div class="model-grid">
                <div class="model-card">
                    <h4>📸 Photo 照片模型</h4>
                    <div class="model-field">
                        <span class="field-name">url</span>: <span class="field-type">String</span> <span class="field-required">[必填]</span><br>
                        <small>照片的URL地址</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">title</span>: <span class="field-type">String</span><br>
                        <small>照片标题</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">description</span>: <span class="field-type">String</span><br>
                        <small>照片描述</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">tags</span>: <span class="field-type">Array[String]</span><br>
                        <small>照片标签数组</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">createdAt</span>: <span class="field-type">Date</span><br>
                        <small>创建时间（自动生成）</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">updatedAt</span>: <span class="field-type">Date</span><br>
                        <small>更新时间（自动生成）</small>
                    </div>
                </div>
                <div class="model-card">
                    <h4>👤 User 用户模型</h4>
                    <div class="model-field">
                        <span class="field-name">username</span>: <span class="field-type">String</span> <span class="field-required">[必填]</span><br>
                        <small>用户名（3-20个字符，唯一）</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">password</span>: <span class="field-type">String</span> <span class="field-required">[必填]</span><br>
                        <small>密码（至少6个字符，加密存储）</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">role</span>: <span class="field-type">String</span><br>
                        <small>用户角色：'admin' | 'user'（默认：'user'）</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">isActive</span>: <span class="field-type">Boolean</span><br>
                        <small>账户状态（默认：true）</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">lastLogin</span>: <span class="field-type">Date</span><br>
                        <small>最后登录时间</small>
                    </div>
                    <div class="model-field">
                        <span class="field-name">createdAt</span>: <span class="field-type">Date</span><br>
                        <small>注册时间（自动生成）</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="response-format">
            <h3 class="model-title">
                <i class="fas fa-code"></i>
                响应格式
            </h3>
            <h4>✅ 成功响应格式</h4>
            <div class="code-block">{
  "code": 2000,
  "data": {
    // 具体数据内容
  },
  "message": "操作成功"
}</div>
            
            <h4>📄 分页响应格式</h4>
            <div class="code-block">{
  "code": 2000,
  "data": [
    // 数据数组
  ],
  "pagination": {
    "currentPage": 1,
    "totalPages": 10,
    "totalItems": 100,
    "itemsPerPage": 10,
    "hasNextPage": true,
    "hasPrevPage": false
  },
  "message": "获取成功"
}</div>

            <h4>❌ 错误响应格式</h4>
            <div class="code-block">{
  "code": 4001,
  "message": "参数验证失败",
  "data": null
}</div>

            <h4>🔐 认证说明</h4>
            <p>需要认证的接口请在请求头中包含JWT token：</p>
            <div class="code-block">Authorization: Bearer {your_jwt_token}</div>
            
            <h4>📋 响应码说明</h4>
            <div class="code-block">• 2xxx: 成功响应
• 4xxx: 客户端错误（参数错误、认证失败等）
• 5xxx: 服务器错误</div>
        </div>

        <div class="features-grid">
            <div class="feature-card">
                <div class="feature-icon"><i class="fas fa-images"></i></div>
                <div class="feature-title">照片管理</div>
                <div class="feature-desc">完整的 CRUD 操作，支持照片的创建、读取、更新和删除</div>
            </div>
            <div class="feature-card">
                <div class="feature-icon"><i class="fas fa-random"></i></div>
                <div class="feature-title">随机展示</div>
                <div class="feature-desc">智能随机算法，为您呈现精彩的照片内容</div>
            </div>
            <div class="feature-card">
                <div class="feature-icon"><i class="fas fa-list"></i></div>
                <div class="feature-title">分页浏览</div>
                <div class="feature-desc">高效的分页系统，轻松浏览大量照片内容</div>
            </div>
            <div class="feature-card">
                <div class="feature-icon"><i class="fas fa-code"></i></div>
                <div class="feature-title">RESTful API</div>
                <div class="feature-desc">标准化的 API 接口，易于集成和开发</div>
            </div>
        </div>
    </div>
</body>
</html>